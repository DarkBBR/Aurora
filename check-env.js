import dotenv from "dotenv";
import colors from "colors";

// Carregar vari√°veis de ambiente
dotenv.config();

console.log(colors.cyan("üîç Verificando configura√ß√µes do ambiente...\n"));

// Verificar configura√ß√µes b√°sicas
const configs = {
  "BOT_NAME": process.env.BOT_NAME,
  "BOT_PREFIX": process.env.BOT_PREFIX,
  "OWNER_NUMBER": process.env.OWNER_NUMBER,
  "SPIDERX_API_KEY": process.env.SPIDERX_API_KEY,
  "GEMINI_API_KEY": process.env.GEMINI_API_KEY
};

let hasIssues = false;

for (const [key, value] of Object.entries(configs)) {
  if (value) {
    if (key === "SPIDERX_API_KEY" || key === "GEMINI_API_KEY") {
      if (value === "SUA_CHAVE_AQUI" || value === "D0wgubPHthjiOv8DxshC") {
        console.log(colors.red(`‚ùå ${key}: ${value} (Chave padr√£o - precisa ser alterada)`));
        hasIssues = true;
      } else {
        console.log(colors.green(`‚úÖ ${key}: ${value.substring(0, 10)}...`));
      }
    } else {
      console.log(colors.green(`‚úÖ ${key}: ${value}`));
    }
  } else {
    console.log(colors.yellow(`‚ö†Ô∏è  ${key}: N√£o definido (usando padr√£o)`));
  }
}

console.log("\n" + colors.cyan("üìã Resumo:"));

if (hasIssues) {
  console.log(colors.red("‚ùå Problemas encontrados:"));
  console.log(colors.red("   ‚Ä¢ As chaves das APIs precisam ser configuradas"));
  console.log(colors.red("   ‚Ä¢ Crie um arquivo .env na raiz do projeto"));
  console.log(colors.red("   ‚Ä¢ Obtenha suas chaves em: https://spiderx.com.br"));
} else {
  console.log(colors.green("‚úÖ Todas as configura√ß√µes est√£o corretas!"));
}

console.log(colors.cyan("\nüîß Para configurar:"));
console.log("1. Crie um arquivo .env na raiz do projeto");
console.log("2. Copie o conte√∫do do env.example");
console.log("3. Substitua as chaves das APIs pelas suas chaves reais");
console.log("4. Reinicie o bot"); 